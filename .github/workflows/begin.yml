# This is a basic workflow to help you get started with Actions

name: MAIN
# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      job:
        required: true
        type: string
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      contents: read  

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        id: catch-perf
        run: |
          file_prev="coucou"
          prev_cycle=$(cat $file_prev | grep "cycle" | cut -d "=" -f 2)
          prev_read=$(cat $file_prev | grep "read" | cut -d "=" -f 2)
          prev_write=$(cat $file_prev| grep "write" | cut -d "=" -f 2)
          nb_read_miss=0.2
          nb_write_miss=0.1
          nb_cycle_execution=3

          echo "read = $nb_read_miss write = $nb_write_miss  cycles = $nb_cycle_execution"
          echo "read_prev = $prev_read write_prev = $prev_write cycle = $prev_cycle"
          if (( $(echo "$nb_read_miss > $prev_read"  | bc -l) ))
          then
            echo -e  "\033[31mThe percentage of miss on read has grow\033[0m"
            echo "exitcode=1" > exitcode.txt 
            exit 1
          fi
          if (( $(echo "$nb_write_miss > $prev_write"  | bc -l) ))
          then
            echo -e  "\033[31mThe percentage of miss on write has grow\033[0m"
            echo "exitcode=2" > exitcode.txt 
            exit 2
          fi
          if (( $(echo "$nb_cycle_execution > $prev_cycle"  | bc -l) ))
          then
            echo -e  "\033[31mThe number of cycle has grow\033[0m"
            echo "exitcode=3" > exitcode.txt 
            exit 3
          fi

      - name: Change best perf
        id: new_best_perf
        run: |
          file_prev="coucou"
          prev_cycle=$(cat $file_prev | grep "cycle" | cut -d "=" -f 2)
          prev_read=$(cat $file_prev | grep "read" | cut -d "=" -f 2)
          prev_write=$(cat $file_prev| grep "write" | cut -d "=" -f 2)
          nb_read_miss=0.0
          nb_write_miss=0.0
          nb_cycle_execution=1

          echo "read = $nb_read_miss write = $nb_write_miss  cycles = $nb_cycle_execution"
          echo "read_prev = $prev_read write_prev = $prev_write cycle = $prev_cycle"
          x=""
          if (( $(echo "$nb_read_miss < $prev_read"  | bc -l) ))
          then
            x+=" read=$nb_read_miss"
          fi
          if (( $(echo "$nb_write_miss < $prev_write"  | bc -l) ))
          then
            x+=" write=$nb_write_miss"
          fi
          if (( $(echo "$nb_cycle_execution < $prev_cycle"  | bc -l) ))
          then
            x+=" cycle=$nb_cycle_execution"
          fi
          if [[ $x != "" ]]
          then
            echo "message=$x" >> $GITHUB_OUTPUT
            echo "$x" > result.txt 
          fi


      - name: create artifact
        if: steps.new_best_perf.outputs.message != ''
        uses: actions/upload-artifact@v4
        with:
          name: perf-results
          path: result.txt 
                  

      - name: Trigger comment workflow bad 
        if: failure() 
        uses: actions/upload-artifact@v4
        with:
          name: perf-results
          path: exitcode.txt 

