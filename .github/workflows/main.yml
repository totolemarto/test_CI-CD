# This is a basic workflow to help you get started with Actions

name: CI
permissions:
  contents: write
  pull-requests: write
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          file_prev="coucou"
          prev_cycle=$(cat $file_prev | grep "cycle" | cut -d "=" -f 2)
          prev_read=$(cat $file_prev | grep "read" | cut -d "=" -f 2)
          prev_write=$(cat $file_prev| grep "write" | cut -d "=" -f 2)
          nb_read_miss=0.2
          nb_write_miss=0.1
          nb_cycle_execution=3

          echo "read = $nb_read_miss write = $nb_write_miss  cycles = $nb_cycle_execution"
          echo "read_prev = $prev_read write_prev = $prev_write cycle = $prev_cycle"
          if (( $(echo "$nb_read_miss > $prev_read"  | bc -l) ))
          then
            echo -e  "\033[31mThe percentage of miss on read has grow\033[0m"
            exit 1
          fi
          if (( $(echo "$nb_write_miss > $prev_write"  | bc -l) ))
          then
            echo -e  "\033[31mThe percentage of miss on write has grow\033[0m"
            exit 2
          fi
          if (( $(echo "$nb_cycle_execution > $prev_cycle"  | bc -l) ))
          then
            echo -e  "\033[31mThe number of cycle has grow\033[0m"
            exit 3
          fi

      - name: Change best perf
        run: |
          file_prev="coucou"
          prev_cycle=$(cat $file_prev | grep "cycle" | cut -d "=" -f 2)
          prev_read=$(cat $file_prev | grep "read" | cut -d "=" -f 2)
          prev_write=$(cat $file_prev| grep "write" | cut -d "=" -f 2)
          nb_read_miss=0.2
          nb_write_miss=0.1
          nb_cycle_execution=3

          echo "read = $nb_read_miss write = $nb_write_miss  cycles = $nb_cycle_execution"
          echo "read_prev = $prev_read write_prev = $prev_write cycle = $prev_cycle"
          if (( $(echo "$nb_read_miss < $prev_read"  | bc -l) ))
          then
            sed -i -E "s/read.*/read=$nb_read_miss/" coucou
          fi
          if (( $(echo "$nb_write_miss < $prev_write"  | bc -l) ))
          then
            sed -i -E "s/write.*/write=$nb_write_miss/" coucou
          fi
          if (( $(echo "$nb_cycle_execution < $prev_cycle"  | bc -l) ))
          then
            echo "ca passe"
            sed -i -E "s/cycle.*/cycle=$nb_cycle_execution/" coucou
          fi
          exit 1
          git config --local user.email "test@github.com"
          git config --local user.name "GitHub Action test"
          git add ./coucou
          git commit -m "new best perf"
          cat coucou
      - name: Push changes # push the output folder to your repo
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true

      - name: Put a comment 
        if: failure()
        run: |
          if [ -v $GITHUB_TOKEN ]
          then
            exit 0
          fi
          echo "Ã§a passe "
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")

          COMMENT=" Pipeline has failed due to a decrease in performance."

          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Content-Type: application/json" \
               -X POST \
               -d "{\"body\": \"$COMMENT\"}" \
               "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments"

  coucou:
    name: coucou 
    runs-on: ubuntu-latest
    needs: build
    steps:
        - name: ne_se_lance_pas
          run: |
            echo "hey"

